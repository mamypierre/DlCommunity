<?php

namespace DlCommunity\CoreBundle\Repository;

/**
 * userRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository {

    public function getUser_findAll() {

        $qb = $this->getQueryBuilderAllUser();

        return $qb->getQuery()->getResult();
    }

    public function isInUser(\DlCommunity\CoreBundle\Entity\Information $information) {
        

        $qb = $this->getQueryBuilderAllUser();
        $qb->where('information = :info')->setParameter('info', $information);

        return $qb->getQuery()->getResult();
    }
    
    public function isInUser_pseudo( $pseudo) {
        

        $qb = $this->getQueryBuilderAllUser();
        $qb->where('user.pseudo = :pseudo')->setParameter('pseudo', $pseudo);

        return $qb->getQuery()->getResult();
    }
    
    public function isInUser_email( $email) {
        

        $qb = $this->getQueryBuilderAllUser();
        $qb->where('user.emailInscription = :email')->setParameter('email', $email);

        return $qb->getQuery()->getResult();
    }
    

    public function myFindAllDQL() {
        $query = $this->getEntityManager()->createQuery('SELECT a FROM DlCommunityCoreBundle:User a');
        $results = $query->getResult();

        return $results;
    }

    private function getQueryBuilderAllUser() {

        $qb = $this
                ->createQueryBuilder('user')
                ->leftJoin('user.user_type', 'user_type')
                ->addSelect('user_type')
                ->leftJoin('user.information', 'information')
                ->addSelect('information')
                ->leftJoin('information.information_status', 'statu')
                ->addSelect('statu')
                ->leftJoin('user.validation_type', 'validation_type')
                ->addSelect('validation_type')
                ->leftJoin('user.picture', 'picture')
                ->addSelect('picture');

        return $qb;
    }

    public function isUser() {
        
    }

}
